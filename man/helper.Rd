% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LASICHsuppfns.R
\name{helper}
\alias{helper}
\alias{D2L}
\alias{tree2L}
\alias{clust}
\alias{dist.clust}
\alias{multlasso}
\alias{updateC}
\alias{crtC}
\alias{crt}
\alias{multlasso2}
\alias{updateA}
\alias{updateAk}
\alias{crtA}
\alias{updateB}
\alias{crtB}
\alias{sftthrsh}
\alias{updateC2}
\alias{crtC2}
\alias{crtD}
\alias{crt2}
\alias{multlasso3}
\alias{updateC3}
\alias{sftthrsh.vec}
\alias{crtC3}
\alias{crtD3}
\alias{crt3}
\alias{multlasso.block}
\alias{eval.lasso}
\alias{AUC}
\alias{sep.glasso}
\alias{JGLs}
\alias{Guos}
\alias{Guo}
\alias{min.lmd}
\title{Helper functions for LASICH}
\usage{
D2L(D, alpha = 1)

tree2L(nnode)

clust(xs, mthd = 1)

dist.clust(d, cls, mthd = 1)

multlasso(K, L, p, ns, Sigmas, Sigma0, Omega0 = NULL, lambda, rho, tol,
  grp = NULL, est = NULL, LD = NULL)

updateC(D, EC, M, K, p)

crtC(C, D, EC, L, p, lambda2)

crt(A, B, C, D, EA, EB, EC, L, Sigmas, ns, p, rho, K, lambda, prt = TRUE)

multlasso2(K, W, p, ns, Sigmas, Sigma0, Omega0 = NULL, lambda, rho, tol,
  grp = NULL, est = NULL)

updateA(D, EA, Sigmas, K, p, ns, rho)

updateAk(Dk, EkA, Sigmak, nk, rho)

crtA(A, D, EA, Sigmas, K, ns, rho)

updateB(D, EB, K, p, rho, lambda1)

crtB(B, D, EB, rho, lambda1)

sftthrsh(x, y)

updateC2(D, EC, M, K, p)

crtC2(C, D, EC, W, p, lambda2, K, rho)

crtD(A, B, C, D, EA, EB, EC, rho, lambda2)

crt2(A, B, C, D, EA, EB, EC, W, Sigmas, ns, p, rho, K, lambda, prt = TRUE)

multlasso3(K, L, p, ns, Sigmas, Sigma0, Omega0 = NULL, lambda, rho, tol,
  grp = NULL, est = NULL, LD = NULL, wt = NULL)

updateC3(D, EC, L.sqrt, K, p, lambda2, rho)

sftthrsh.vec(x, y)

crtC3(C, D, EC, L, L.sqrt, p, lambda2, rho)

crtD3(A, B, C, D, EA, EB, EC, L.sqrt, rho, lambda2, p)

crt3(A, B, C, D, EA, EB, EC, L, L.sqrt, Sigmas, ns, p, rho, K, lambda,
  prt = TRUE)

multlasso.block(K, L, p, ns, Sigmas, Sigma0, Omega0 = NULL, lambda, rho, tol,
  grp = NULL, est = NULL, LD = NULL, wt = NULL)

eval.lasso(grp = NULL, Omega0, K, p, est)

AUC(x, y)

sep.glasso(K, Sigmas, Sigma0, Omega0 = NULL, rho.glasso, p, grp = NULL)

JGLs(K, zs, Sigma0, Omega0 = NULL, lambda.fused, lambda.group, p,
  grp = NULL)

Guos(K, p, Sigmas, Sigma0, Omega0 = NULL, lambda.guo, grp = NULL)

Guo(K, p, Sigmas, lambda.guo, adaptive_weight = array(1, c(K, p, p)))

\method{min}{lmd}(Sigma0, B = 1000, K, ns, p, num, lambdas2)
}
\arguments{
\item{various}{various}
}
\description{
Helper functions for LASICH
}
